{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyOeb3CxIh4j+D33Pg1WxQAm",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Aditya950/Stock_Prediction/blob/main/StockPrediction!!\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 1,
      "metadata": {
        "id": "2TrPrCNhd46v"
      },
      "outputs": [],
      "source": [
        "#yahoo finance as data source\n",
        "#pip install yfinance\n",
        "import yfinance as yf"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#See the yahoo finance ticker for your stock symbol\n",
        "stock_symbol = 'GAIL.NS'"
      ],
      "metadata": {
        "id": "dxl-gtmVeLt3"
      },
      "execution_count": 2,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#last 5 years data with interval of 1 day\n",
        "data = yf.download(tickers=stock_symbol,period='5y',interval='1d')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "WN5htnGYeRPR",
        "outputId": "be36e069-0e8e-4eaa-85fe-085e4b24cc22"
      },
      "execution_count": 3,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\r[*********************100%%**********************]  1 of 1 completed\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "type(data)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "_DEA89xFeUDD",
        "outputId": "c8980803-fb93-4a63-dd25-df44a1a6b501"
      },
      "execution_count": 4,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "pandas.core.frame.DataFrame"
            ]
          },
          "metadata": {},
          "execution_count": 4
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 237
        },
        "id": "HpqtngFBepiI",
        "outputId": "c1671547-1545-43a3-d9d5-a5beb3b26d1d"
      },
      "execution_count": 5,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                  Open        High         Low       Close   Adj Close  \\\n",
              "Date                                                                     \n",
              "2018-09-06  121.566666  124.333336  120.349998  121.866669   97.252060   \n",
              "2018-09-07  122.983330  126.533333  122.216667  125.733330  100.337738   \n",
              "2018-09-10  125.666664  126.550003  123.199997  125.900002  100.470734   \n",
              "2018-09-11  127.316666  127.316666  122.933334  124.050003   98.994408   \n",
              "2018-09-12  124.666664  125.566666  122.599998  123.366669   98.449081   \n",
              "\n",
              "              Volume  \n",
              "Date                  \n",
              "2018-09-06  17752524  \n",
              "2018-09-07  15558216  \n",
              "2018-09-10  11892357  \n",
              "2018-09-11  15053895  \n",
              "2018-09-12  11260140  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-050b220e-358e-4762-a7a1-f8ed1ba442dd\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Open</th>\n",
              "      <th>High</th>\n",
              "      <th>Low</th>\n",
              "      <th>Close</th>\n",
              "      <th>Adj Close</th>\n",
              "      <th>Volume</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Date</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>2018-09-06</th>\n",
              "      <td>121.566666</td>\n",
              "      <td>124.333336</td>\n",
              "      <td>120.349998</td>\n",
              "      <td>121.866669</td>\n",
              "      <td>97.252060</td>\n",
              "      <td>17752524</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2018-09-07</th>\n",
              "      <td>122.983330</td>\n",
              "      <td>126.533333</td>\n",
              "      <td>122.216667</td>\n",
              "      <td>125.733330</td>\n",
              "      <td>100.337738</td>\n",
              "      <td>15558216</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2018-09-10</th>\n",
              "      <td>125.666664</td>\n",
              "      <td>126.550003</td>\n",
              "      <td>123.199997</td>\n",
              "      <td>125.900002</td>\n",
              "      <td>100.470734</td>\n",
              "      <td>11892357</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2018-09-11</th>\n",
              "      <td>127.316666</td>\n",
              "      <td>127.316666</td>\n",
              "      <td>122.933334</td>\n",
              "      <td>124.050003</td>\n",
              "      <td>98.994408</td>\n",
              "      <td>15053895</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2018-09-12</th>\n",
              "      <td>124.666664</td>\n",
              "      <td>125.566666</td>\n",
              "      <td>122.599998</td>\n",
              "      <td>123.366669</td>\n",
              "      <td>98.449081</td>\n",
              "      <td>11260140</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-050b220e-358e-4762-a7a1-f8ed1ba442dd')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-050b220e-358e-4762-a7a1-f8ed1ba442dd button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-050b220e-358e-4762-a7a1-f8ed1ba442dd');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-ecf540d5-8b07-4046-b05c-1ec9f8666c5a\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ecf540d5-8b07-4046-b05c-1ec9f8666c5a')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-ecf540d5-8b07-4046-b05c-1ec9f8666c5a button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 5
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "len(data)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "eQeCX5Iyer1-",
        "outputId": "abf7a47a-28bb-4c3f-8220-c50b92057387"
      },
      "execution_count": 6,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "1235"
            ]
          },
          "metadata": {},
          "execution_count": 6
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data.tail()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 237
        },
        "id": "JOKIibtCevUa",
        "outputId": "449902c9-8918-497c-d391-eab6f74cbe19"
      },
      "execution_count": 7,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                  Open        High         Low       Close   Adj Close  \\\n",
              "Date                                                                     \n",
              "2023-08-31  116.000000  116.750000  114.750000  115.000000  115.000000   \n",
              "2023-09-01  117.000000  122.300003  115.550003  121.349998  121.349998   \n",
              "2023-09-04  122.699997  123.750000  121.500000  122.699997  122.699997   \n",
              "2023-09-05  123.500000  127.099998  121.300003  123.400002  123.400002   \n",
              "2023-09-06  123.000000  125.900002  123.000000  124.599998  124.599998   \n",
              "\n",
              "              Volume  \n",
              "Date                  \n",
              "2023-08-31  12626049  \n",
              "2023-09-01  31991938  \n",
              "2023-09-04  19622564  \n",
              "2023-09-05  41671778  \n",
              "2023-09-06  20234630  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-4379b0f2-82a5-4df1-8d87-8fe476bfe1c4\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Open</th>\n",
              "      <th>High</th>\n",
              "      <th>Low</th>\n",
              "      <th>Close</th>\n",
              "      <th>Adj Close</th>\n",
              "      <th>Volume</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Date</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>2023-08-31</th>\n",
              "      <td>116.000000</td>\n",
              "      <td>116.750000</td>\n",
              "      <td>114.750000</td>\n",
              "      <td>115.000000</td>\n",
              "      <td>115.000000</td>\n",
              "      <td>12626049</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2023-09-01</th>\n",
              "      <td>117.000000</td>\n",
              "      <td>122.300003</td>\n",
              "      <td>115.550003</td>\n",
              "      <td>121.349998</td>\n",
              "      <td>121.349998</td>\n",
              "      <td>31991938</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2023-09-04</th>\n",
              "      <td>122.699997</td>\n",
              "      <td>123.750000</td>\n",
              "      <td>121.500000</td>\n",
              "      <td>122.699997</td>\n",
              "      <td>122.699997</td>\n",
              "      <td>19622564</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2023-09-05</th>\n",
              "      <td>123.500000</td>\n",
              "      <td>127.099998</td>\n",
              "      <td>121.300003</td>\n",
              "      <td>123.400002</td>\n",
              "      <td>123.400002</td>\n",
              "      <td>41671778</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2023-09-06</th>\n",
              "      <td>123.000000</td>\n",
              "      <td>125.900002</td>\n",
              "      <td>123.000000</td>\n",
              "      <td>124.599998</td>\n",
              "      <td>124.599998</td>\n",
              "      <td>20234630</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4379b0f2-82a5-4df1-8d87-8fe476bfe1c4')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-4379b0f2-82a5-4df1-8d87-8fe476bfe1c4 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-4379b0f2-82a5-4df1-8d87-8fe476bfe1c4');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-55e91155-938f-4946-a2bb-c5592515c35f\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-55e91155-938f-4946-a2bb-c5592515c35f')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-55e91155-938f-4946-a2bb-c5592515c35f button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 7
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "opn = data[['Open']]"
      ],
      "metadata": {
        "id": "5Tu15ADGexDA"
      },
      "execution_count": 8,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "opn.plot()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 439
        },
        "id": "aUMfBm-Se1tn",
        "outputId": "e8cc045a-5454-4431-f869-aa3e07e00e2e"
      },
      "execution_count": 9,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<Axes: xlabel='Date'>"
            ]
          },
          "metadata": {},
          "execution_count": 9
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt"
      ],
      "metadata": {
        "id": "6JfFXe4Ce3VJ"
      },
      "execution_count": 10,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "ds = opn.values"
      ],
      "metadata": {
        "id": "LUyWe4G1e6Sy"
      },
      "execution_count": 11,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "ds"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "NikbKUNue8bk",
        "outputId": "addd3110-6c0a-4457-e33f-4c119e6b15e0"
      },
      "execution_count": 12,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[121.56666565],\n",
              "       [122.98332977],\n",
              "       [125.66666412],\n",
              "       ...,\n",
              "       [122.69999695],\n",
              "       [123.5       ],\n",
              "       [123.        ]])"
            ]
          },
          "metadata": {},
          "execution_count": 12
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.plot(ds)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 447
        },
        "id": "P1TmSFwIe-LA",
        "outputId": "01827c40-fa93-4238-89bf-e1a5b2324ad9"
      },
      "execution_count": 13,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[<matplotlib.lines.Line2D at 0x796284d53ca0>]"
            ]
          },
          "metadata": {},
          "execution_count": 13
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np"
      ],
      "metadata": {
        "id": "AmE-yN5qfBY8"
      },
      "execution_count": 14,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.preprocessing import MinMaxScaler"
      ],
      "metadata": {
        "id": "aizIwhWjfGDe"
      },
      "execution_count": 15,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Using MinMaxScaler for normalizing data between 0 & 1\n",
        "normalizer = MinMaxScaler(feature_range=(0,1))\n",
        "ds_scaled = normalizer.fit_transform(np.array(ds).reshape(-1,1))"
      ],
      "metadata": {
        "id": "DAOndbStfI3U"
      },
      "execution_count": 16,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "len(ds_scaled), len(ds)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ACF1Bg0KfNXE",
        "outputId": "5d699484-adb9-426d-a2ae-2915c21808f3"
      },
      "execution_count": 17,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(1235, 1235)"
            ]
          },
          "metadata": {},
          "execution_count": 17
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Defining test and train data sizes\n",
        "train_size = int(len(ds_scaled)*0.70)\n",
        "test_size = len(ds_scaled) - train_size"
      ],
      "metadata": {
        "id": "jknes0ZSfP4F"
      },
      "execution_count": 18,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "train_size,test_size"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ZDpcYzvxfSIj",
        "outputId": "70eeafd9-d45a-49ef-b800-309302ba38bc"
      },
      "execution_count": 19,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(864, 371)"
            ]
          },
          "metadata": {},
          "execution_count": 19
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Splitting data between train and test\n",
        "ds_train, ds_test = ds_scaled[0:train_size,:], ds_scaled[train_size:len(ds_scaled),:1]"
      ],
      "metadata": {
        "id": "QrqzjtSyfUdY"
      },
      "execution_count": 20,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "len(ds_train),len(ds_test)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "buZ6aG3OfXgN",
        "outputId": "60986dab-f44a-4259-9db7-e3898eb28344"
      },
      "execution_count": 21,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(864, 371)"
            ]
          },
          "metadata": {},
          "execution_count": 21
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#creating dataset in time series for LSTM model\n",
        "#X[100,120,140,160,180] : Y[200]\n",
        "def create_ds(dataset,step):\n",
        "    Xtrain, Ytrain = [], []\n",
        "    for i in range(len(dataset)-step-1):\n",
        "        a = dataset[i:(i+step), 0]\n",
        "        Xtrain.append(a)\n",
        "        Ytrain.append(dataset[i + step, 0])\n",
        "    return np.array(Xtrain), np.array(Ytrain)"
      ],
      "metadata": {
        "id": "6ZhtOngkfZqi"
      },
      "execution_count": 22,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Taking 100 days price as one record for training\n",
        "time_stamp = 100\n",
        "X_train, y_train = create_ds(ds_train,time_stamp)\n",
        "X_test, y_test = create_ds(ds_test,time_stamp)"
      ],
      "metadata": {
        "id": "Ojc436OYfcIl"
      },
      "execution_count": 23,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "X_train.shape,y_train.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "JjFOZo0yflC_",
        "outputId": "0bc517ea-5860-4f7e-ff58-e0582f1adcc8"
      },
      "execution_count": 24,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "((763, 100), (763,))"
            ]
          },
          "metadata": {},
          "execution_count": 24
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "X_test.shape, y_test.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "R5zgYI05foyk",
        "outputId": "3fa48a56-ef7a-41b5-bc8c-17c5fe3e1b92"
      },
      "execution_count": 25,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "((270, 100), (270,))"
            ]
          },
          "metadata": {},
          "execution_count": 25
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Reshaping data to fit into LSTM model\n",
        "X_train = X_train.reshape(X_train.shape[0],X_train.shape[1] , 1)\n",
        "X_test = X_test.reshape(X_test.shape[0],X_test.shape[1] , 1)"
      ],
      "metadata": {
        "id": "lmLbbnXIfqlo"
      },
      "execution_count": 26,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "from keras.models import Sequential\n",
        "from keras.layers import Dense, LSTM"
      ],
      "metadata": {
        "id": "ycfFnadxfskm"
      },
      "execution_count": 27,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Creating LSTM model using keras\n",
        "model = Sequential()\n",
        "model.add(LSTM(units=50,return_sequences=True,input_shape=(X_train.shape[1],1)))\n",
        "model.add(LSTM(units=50,return_sequences=True))\n",
        "model.add(LSTM(units=50))\n",
        "model.add(Dense(units=1,activation='linear'))\n",
        "model.summary()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "rhTAsDE9fvcd",
        "outputId": "29de6c89-edaf-42d1-d3f3-7f49d22fe200"
      },
      "execution_count": 28,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Model: \"sequential\"\n",
            "_________________________________________________________________\n",
            " Layer (type)                Output Shape              Param #   \n",
            "=================================================================\n",
            " lstm (LSTM)                 (None, 100, 50)           10400     \n",
            "                                                                 \n",
            " lstm_1 (LSTM)               (None, 100, 50)           20200     \n",
            "                                                                 \n",
            " lstm_2 (LSTM)               (None, 50)                20200     \n",
            "                                                                 \n",
            " dense (Dense)               (None, 1)                 51        \n",
            "                                                                 \n",
            "=================================================================\n",
            "Total params: 50,851\n",
            "Trainable params: 50,851\n",
            "Non-trainable params: 0\n",
            "_________________________________________________________________\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Training model with adam optimizer and mean squared error loss function\n",
        "model.compile(loss='mean_squared_error',optimizer='adam')\n",
        "model.fit(X_train,y_train,validation_data=(X_test,y_test),epochs=100,batch_size=64)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ZuOphzR3fzGk",
        "outputId": "6fc9f61e-d002-48ba-dcef-30190bb4a241"
      },
      "execution_count": 30,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Epoch 1/100\n",
            "12/12 [==============================] - 18s 316ms/step - loss: 0.0114 - val_loss: 0.0045\n",
            "Epoch 2/100\n",
            "12/12 [==============================] - 2s 204ms/step - loss: 0.0058 - val_loss: 0.0025\n",
            "Epoch 3/100\n",
            "12/12 [==============================] - 2s 207ms/step - loss: 0.0049 - val_loss: 0.0019\n",
            "Epoch 4/100\n",
            "12/12 [==============================] - 4s 302ms/step - loss: 0.0039 - val_loss: 0.0018\n",
            "Epoch 5/100\n",
            "12/12 [==============================] - 2s 212ms/step - loss: 0.0035 - val_loss: 0.0023\n",
            "Epoch 6/100\n",
            "12/12 [==============================] - 3s 212ms/step - loss: 0.0034 - val_loss: 0.0017\n",
            "Epoch 7/100\n",
            "12/12 [==============================] - 3s 212ms/step - loss: 0.0032 - val_loss: 0.0016\n",
            "Epoch 8/100\n",
            "12/12 [==============================] - 4s 311ms/step - loss: 0.0030 - val_loss: 0.0016\n",
            "Epoch 9/100\n",
            "12/12 [==============================] - 4s 316ms/step - loss: 0.0030 - val_loss: 0.0017\n",
            "Epoch 10/100\n",
            "12/12 [==============================] - 2s 208ms/step - loss: 0.0028 - val_loss: 0.0015\n",
            "Epoch 11/100\n",
            "12/12 [==============================] - 2s 207ms/step - loss: 0.0027 - val_loss: 0.0015\n",
            "Epoch 12/100\n",
            "12/12 [==============================] - 2s 207ms/step - loss: 0.0028 - val_loss: 0.0017\n",
            "Epoch 13/100\n",
            "12/12 [==============================] - 3s 247ms/step - loss: 0.0026 - val_loss: 0.0014\n",
            "Epoch 14/100\n",
            "12/12 [==============================] - 3s 247ms/step - loss: 0.0025 - val_loss: 0.0014\n",
            "Epoch 15/100\n",
            "12/12 [==============================] - 2s 206ms/step - loss: 0.0024 - val_loss: 0.0015\n",
            "Epoch 16/100\n",
            "12/12 [==============================] - 2s 207ms/step - loss: 0.0023 - val_loss: 0.0016\n",
            "Epoch 17/100\n",
            "12/12 [==============================] - 2s 204ms/step - loss: 0.0023 - val_loss: 0.0011\n",
            "Epoch 18/100\n",
            "12/12 [==============================] - 4s 306ms/step - loss: 0.0022 - val_loss: 0.0017\n",
            "Epoch 19/100\n",
            "12/12 [==============================] - 3s 210ms/step - loss: 0.0023 - val_loss: 0.0013\n",
            "Epoch 20/100\n",
            "12/12 [==============================] - 2s 206ms/step - loss: 0.0021 - val_loss: 0.0013\n",
            "Epoch 21/100\n",
            "12/12 [==============================] - 2s 209ms/step - loss: 0.0020 - val_loss: 0.0011\n",
            "Epoch 22/100\n",
            "12/12 [==============================] - 2s 205ms/step - loss: 0.0019 - val_loss: 0.0013\n",
            "Epoch 23/100\n",
            "12/12 [==============================] - 4s 311ms/step - loss: 0.0018 - val_loss: 9.3027e-04\n",
            "Epoch 24/100\n",
            "12/12 [==============================] - 2s 208ms/step - loss: 0.0017 - val_loss: 8.9207e-04\n",
            "Epoch 25/100\n",
            "12/12 [==============================] - 2s 209ms/step - loss: 0.0017 - val_loss: 8.4229e-04\n",
            "Epoch 26/100\n",
            "12/12 [==============================] - 2s 206ms/step - loss: 0.0016 - val_loss: 0.0013\n",
            "Epoch 27/100\n",
            "12/12 [==============================] - 3s 245ms/step - loss: 0.0017 - val_loss: 0.0013\n",
            "Epoch 28/100\n",
            "12/12 [==============================] - 3s 258ms/step - loss: 0.0017 - val_loss: 0.0017\n",
            "Epoch 29/100\n",
            "12/12 [==============================] - 2s 209ms/step - loss: 0.0017 - val_loss: 0.0010\n",
            "Epoch 30/100\n",
            "12/12 [==============================] - 2s 208ms/step - loss: 0.0016 - val_loss: 9.5826e-04\n",
            "Epoch 31/100\n",
            "12/12 [==============================] - 2s 206ms/step - loss: 0.0016 - val_loss: 8.6487e-04\n",
            "Epoch 32/100\n",
            "12/12 [==============================] - 3s 289ms/step - loss: 0.0015 - val_loss: 7.5316e-04\n",
            "Epoch 33/100\n",
            "12/12 [==============================] - 3s 209ms/step - loss: 0.0015 - val_loss: 7.4758e-04\n",
            "Epoch 34/100\n",
            "12/12 [==============================] - 3s 212ms/step - loss: 0.0016 - val_loss: 0.0012\n",
            "Epoch 35/100\n",
            "12/12 [==============================] - 2s 207ms/step - loss: 0.0014 - val_loss: 7.7148e-04\n",
            "Epoch 36/100\n",
            "12/12 [==============================] - 2s 210ms/step - loss: 0.0013 - val_loss: 7.8524e-04\n",
            "Epoch 37/100\n",
            "12/12 [==============================] - 4s 352ms/step - loss: 0.0013 - val_loss: 7.1876e-04\n",
            "Epoch 38/100\n",
            "12/12 [==============================] - 2s 210ms/step - loss: 0.0013 - val_loss: 0.0010\n",
            "Epoch 39/100\n",
            "12/12 [==============================] - 2s 210ms/step - loss: 0.0013 - val_loss: 0.0012\n",
            "Epoch 40/100\n",
            "12/12 [==============================] - 2s 208ms/step - loss: 0.0013 - val_loss: 8.1766e-04\n",
            "Epoch 41/100\n",
            "12/12 [==============================] - 5s 399ms/step - loss: 0.0013 - val_loss: 0.0011\n",
            "Epoch 42/100\n",
            "12/12 [==============================] - 2s 211ms/step - loss: 0.0014 - val_loss: 0.0011\n",
            "Epoch 43/100\n",
            "12/12 [==============================] - 2s 206ms/step - loss: 0.0012 - val_loss: 0.0012\n",
            "Epoch 44/100\n",
            "12/12 [==============================] - 2s 212ms/step - loss: 0.0012 - val_loss: 5.7869e-04\n",
            "Epoch 45/100\n",
            "12/12 [==============================] - 3s 213ms/step - loss: 0.0011 - val_loss: 5.9316e-04\n",
            "Epoch 46/100\n",
            "12/12 [==============================] - 3s 285ms/step - loss: 0.0012 - val_loss: 8.0610e-04\n",
            "Epoch 47/100\n",
            "12/12 [==============================] - 2s 210ms/step - loss: 0.0011 - val_loss: 5.3739e-04\n",
            "Epoch 48/100\n",
            "12/12 [==============================] - 2s 209ms/step - loss: 0.0010 - val_loss: 5.2113e-04\n",
            "Epoch 49/100\n",
            "12/12 [==============================] - 2s 211ms/step - loss: 9.7439e-04 - val_loss: 5.3412e-04\n",
            "Epoch 50/100\n",
            "12/12 [==============================] - 3s 267ms/step - loss: 9.8723e-04 - val_loss: 7.6646e-04\n",
            "Epoch 51/100\n",
            "12/12 [==============================] - 3s 235ms/step - loss: 0.0010 - val_loss: 5.0299e-04\n",
            "Epoch 52/100\n",
            "12/12 [==============================] - 2s 208ms/step - loss: 9.1256e-04 - val_loss: 4.7053e-04\n",
            "Epoch 53/100\n",
            "12/12 [==============================] - 2s 207ms/step - loss: 9.0572e-04 - val_loss: 5.1016e-04\n",
            "Epoch 54/100\n",
            "12/12 [==============================] - 2s 209ms/step - loss: 8.5603e-04 - val_loss: 7.1818e-04\n",
            "Epoch 55/100\n",
            "12/12 [==============================] - 4s 310ms/step - loss: 8.6795e-04 - val_loss: 5.1954e-04\n",
            "Epoch 56/100\n",
            "12/12 [==============================] - 3s 212ms/step - loss: 8.9153e-04 - val_loss: 5.6195e-04\n",
            "Epoch 57/100\n",
            "12/12 [==============================] - 2s 210ms/step - loss: 8.2695e-04 - val_loss: 5.1811e-04\n",
            "Epoch 58/100\n",
            "12/12 [==============================] - 2s 209ms/step - loss: 7.7817e-04 - val_loss: 4.5696e-04\n",
            "Epoch 59/100\n",
            "12/12 [==============================] - 3s 239ms/step - loss: 8.2679e-04 - val_loss: 0.0013\n",
            "Epoch 60/100\n",
            "12/12 [==============================] - 3s 267ms/step - loss: 8.2117e-04 - val_loss: 5.6011e-04\n",
            "Epoch 61/100\n",
            "12/12 [==============================] - 2s 208ms/step - loss: 0.0010 - val_loss: 4.4438e-04\n",
            "Epoch 62/100\n",
            "12/12 [==============================] - 2s 209ms/step - loss: 0.0011 - val_loss: 0.0017\n",
            "Epoch 63/100\n",
            "12/12 [==============================] - 2s 208ms/step - loss: 0.0011 - val_loss: 0.0013\n",
            "Epoch 64/100\n",
            "12/12 [==============================] - 3s 293ms/step - loss: 8.8706e-04 - val_loss: 4.3109e-04\n",
            "Epoch 65/100\n",
            "12/12 [==============================] - 3s 213ms/step - loss: 7.6059e-04 - val_loss: 4.0098e-04\n",
            "Epoch 66/100\n",
            "12/12 [==============================] - 2s 205ms/step - loss: 8.0557e-04 - val_loss: 3.9670e-04\n",
            "Epoch 67/100\n",
            "12/12 [==============================] - 3s 213ms/step - loss: 8.3817e-04 - val_loss: 4.6107e-04\n",
            "Epoch 68/100\n",
            "12/12 [==============================] - 2s 211ms/step - loss: 7.7972e-04 - val_loss: 5.0065e-04\n",
            "Epoch 69/100\n",
            "12/12 [==============================] - 4s 307ms/step - loss: 7.6013e-04 - val_loss: 3.8929e-04\n",
            "Epoch 70/100\n",
            "12/12 [==============================] - 3s 211ms/step - loss: 7.1990e-04 - val_loss: 5.7858e-04\n",
            "Epoch 71/100\n",
            "12/12 [==============================] - 2s 208ms/step - loss: 8.1052e-04 - val_loss: 0.0010\n",
            "Epoch 72/100\n",
            "12/12 [==============================] - 2s 208ms/step - loss: 8.7839e-04 - val_loss: 6.9746e-04\n",
            "Epoch 73/100\n",
            "12/12 [==============================] - 3s 260ms/step - loss: 7.8719e-04 - val_loss: 6.1334e-04\n",
            "Epoch 74/100\n",
            "12/12 [==============================] - 4s 295ms/step - loss: 7.7181e-04 - val_loss: 5.9246e-04\n",
            "Epoch 75/100\n",
            "12/12 [==============================] - 3s 263ms/step - loss: 6.7748e-04 - val_loss: 4.3140e-04\n",
            "Epoch 76/100\n",
            "12/12 [==============================] - 2s 210ms/step - loss: 6.5817e-04 - val_loss: 6.0901e-04\n",
            "Epoch 77/100\n",
            "12/12 [==============================] - 3s 248ms/step - loss: 6.6702e-04 - val_loss: 4.1752e-04\n",
            "Epoch 78/100\n",
            "12/12 [==============================] - 3s 264ms/step - loss: 6.4617e-04 - val_loss: 4.1303e-04\n",
            "Epoch 79/100\n",
            "12/12 [==============================] - 2s 209ms/step - loss: 6.4223e-04 - val_loss: 7.3140e-04\n",
            "Epoch 80/100\n",
            "12/12 [==============================] - 3s 212ms/step - loss: 7.2709e-04 - val_loss: 3.8547e-04\n",
            "Epoch 81/100\n",
            "12/12 [==============================] - 2s 206ms/step - loss: 6.7745e-04 - val_loss: 5.0900e-04\n",
            "Epoch 82/100\n",
            "12/12 [==============================] - 4s 326ms/step - loss: 7.5017e-04 - val_loss: 0.0011\n",
            "Epoch 83/100\n",
            "12/12 [==============================] - 3s 214ms/step - loss: 8.3659e-04 - val_loss: 6.5165e-04\n",
            "Epoch 84/100\n",
            "12/12 [==============================] - 3s 213ms/step - loss: 6.6458e-04 - val_loss: 3.8578e-04\n",
            "Epoch 85/100\n",
            "12/12 [==============================] - 3s 216ms/step - loss: 6.3794e-04 - val_loss: 3.8668e-04\n",
            "Epoch 86/100\n",
            "12/12 [==============================] - 3s 250ms/step - loss: 6.5135e-04 - val_loss: 6.0460e-04\n",
            "Epoch 87/100\n",
            "12/12 [==============================] - 3s 270ms/step - loss: 8.4007e-04 - val_loss: 9.2508e-04\n",
            "Epoch 88/100\n",
            "12/12 [==============================] - 2s 206ms/step - loss: 7.5032e-04 - val_loss: 4.7102e-04\n",
            "Epoch 89/100\n",
            "12/12 [==============================] - 2s 205ms/step - loss: 6.8968e-04 - val_loss: 4.0131e-04\n",
            "Epoch 90/100\n",
            "12/12 [==============================] - 3s 213ms/step - loss: 6.8069e-04 - val_loss: 7.4386e-04\n",
            "Epoch 91/100\n",
            "12/12 [==============================] - 4s 324ms/step - loss: 7.2101e-04 - val_loss: 3.9492e-04\n",
            "Epoch 92/100\n",
            "12/12 [==============================] - 2s 208ms/step - loss: 6.5467e-04 - val_loss: 4.1417e-04\n",
            "Epoch 93/100\n",
            "12/12 [==============================] - 2s 208ms/step - loss: 6.2333e-04 - val_loss: 5.0677e-04\n",
            "Epoch 94/100\n",
            "12/12 [==============================] - 2s 205ms/step - loss: 6.6306e-04 - val_loss: 6.5258e-04\n",
            "Epoch 95/100\n",
            "12/12 [==============================] - 3s 216ms/step - loss: 6.6765e-04 - val_loss: 6.5096e-04\n",
            "Epoch 96/100\n",
            "12/12 [==============================] - 4s 297ms/step - loss: 6.9918e-04 - val_loss: 6.8546e-04\n",
            "Epoch 97/100\n",
            "12/12 [==============================] - 2s 209ms/step - loss: 6.9700e-04 - val_loss: 6.4804e-04\n",
            "Epoch 98/100\n",
            "12/12 [==============================] - 2s 205ms/step - loss: 6.3877e-04 - val_loss: 3.8529e-04\n",
            "Epoch 99/100\n",
            "12/12 [==============================] - 2s 207ms/step - loss: 6.1241e-04 - val_loss: 4.3384e-04\n",
            "Epoch 100/100\n",
            "12/12 [==============================] - 3s 247ms/step - loss: 6.2287e-04 - val_loss: 4.1864e-04\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<keras.callbacks.History at 0x796211c67d30>"
            ]
          },
          "metadata": {},
          "execution_count": 30
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#PLotting loss, it shows that loss has decreased significantly and model trained well\n",
        "loss = model.history.history['loss']\n",
        "plt.plot(loss)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 447
        },
        "id": "vx-9I0RMgTdm",
        "outputId": "e4324468-1216-4c2c-c733-4bb09bb3654d"
      },
      "execution_count": 31,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[<matplotlib.lines.Line2D at 0x79620d63f700>]"
            ]
          },
          "metadata": {},
          "execution_count": 31
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Predicitng on train and test data\n",
        "train_predict = model.predict(X_train)\n",
        "test_predict = model.predict(X_test)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "R8Lns5K9htUp",
        "outputId": "856580d9-6e7c-445e-bb97-61e1d3ecc0b1"
      },
      "execution_count": 32,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "24/24 [==============================] - 3s 42ms/step\n",
            "9/9 [==============================] - 0s 43ms/step\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "train_pred = normalizer.inverse_transform(train_predict)\n",
        "test_pred = normalizer.inverse_transform(test_predict)"
      ],
      "metadata": {
        "id": "8lG2Wazph3JN"
      },
      "execution_count": 58,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "import math\n",
        "from sklearn.metrics import mean_squared_error\n",
        "math.sqrt(mean_squared_error(y_train,train_predict))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Yqg5DAhYh7SH",
        "outputId": "85cb36ac-7930-4ad1-f482-1eaa7e2c1287"
      },
      "execution_count": 59,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "88.25042260776081"
            ]
          },
          "metadata": {},
          "execution_count": 59
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "math.sqrt(mean_squared_error(y_test,test_predict))\n",
        "import numpy as np"
      ],
      "metadata": {
        "id": "_Q14JzNIh-ay"
      },
      "execution_count": 61,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "look_back = 100\n",
        "trainpredictplot = np.empty_like(ds_scaled)\n",
        "trainpredictplot[:, :] = np.nan\n",
        "trainpredictplot[look_back:len(train_predict)+ look_back, :] = train_predict\n",
        "\n",
        "#shift test prediction for plotting\n",
        "testpredictplot = np.empty_like(ds_scaled)\n",
        "testpredictplot[:, :] = np.nan\n",
        "testpredictplot[len(train_pred)+ (look_back*2)+1:len(ds_scaled)-1, :] = test_predict\n",
        "\n",
        "#plot baseline and prediction\n",
        "plt.plot(normalizer.inverse_transform(ds_scaled))\n",
        "plt.plot(trainpredictplot)\n",
        "plt.plot(testpredictplot)\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 430
        },
        "id": "0g5AH53FiCZl",
        "outputId": "913e2e7e-0c71-4f3a-d6ad-6a734c43dcf3"
      },
      "execution_count": 91,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "len(ds_test)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "PkJ6xEpbiFYO",
        "outputId": "63895b37-2328-49cb-b930-e85c97500739"
      },
      "execution_count": 63,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "371"
            ]
          },
          "metadata": {},
          "execution_count": 63
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "fut_input = ds_test[271:].reshape(1,-1)\n",
        "fut_input.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "7h-yc-FSiL7J",
        "outputId": "ca4d046e-0e83-41f5-f228-dcce06ddafaa"
      },
      "execution_count": 76,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(1, 100)"
            ]
          },
          "metadata": {},
          "execution_count": 76
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "temp_input = list(fut_input)\n",
        "temp_input = temp_input[0].tolist()"
      ],
      "metadata": {
        "id": "vqrgjnsTiRTw"
      },
      "execution_count": 77,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "from numpy import array"
      ],
      "metadata": {
        "id": "cQl8N5h2iT9c"
      },
      "execution_count": 72,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Predicting next 30 days price suing the current data\n",
        "#It will predict in sliding window manner (algorithm) with stride 1\n",
        "lst_output=[]\n",
        "n_steps=100\n",
        "i=0\n",
        "while(i<30):\n",
        "\n",
        "    if(len(temp_input)>100): # Check if you have enough input data for prediction\n",
        "        fut_input = np.array(temp_input[1:]) # Create the future input by excluding the first element\n",
        "        print(\"{} day input {}\".format(i,fut_input))\n",
        "        fut_input = fut_input.reshape(1,-1)  # Reshape the input data\n",
        "        fut_input = fut_input.reshape((1, n_steps, 1))\n",
        "        yhat = model.predict(fut_input, verbose=0) # Use the model to predict the next day\n",
        "        print(\"{} day output {}\".format(i,yhat))\n",
        "        temp_input.extend(yhat[0].tolist())   # Add the predicted value to the input data\n",
        "        temp_input = temp_input[1:]   # Remove the oldest data point from the input\n",
        "        lst_output.extend(yhat.tolist())  # Add the prediction to the output list\n",
        "        i=i+1\n",
        "    else:\n",
        "        fut_input = fut_input.reshape((1, n_steps,1))   # Reshape the input data for prediction\n",
        "        yhat = model.predict(fut_input, verbose=0)     # Use the model to predict the next day\n",
        "        print(yhat[0])\n",
        "        temp_input.extend(yhat[0].tolist())   # Add the predicted value to the input data\n",
        "        print(len(temp_input))\n",
        "        lst_output.extend(yhat.tolist())    # Add the prediction to the output list\n",
        "        i=i+1\n",
        "\n",
        "\n",
        "print(lst_output)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "VImiF8XgiWOo",
        "outputId": "c90ebe8e-9723-4db7-c736-cc2acb7d33b1"
      },
      "execution_count": 90,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "0 day input [0.71908341 0.71434218 0.69715525 0.7131569  0.70367444 0.70130388\n",
            " 0.70367444 0.71493478 0.70130388 0.70367444 0.71493478 0.73389969\n",
            " 0.72975106 0.72975106 0.73745554 0.73804823 0.74219677 0.72382455\n",
            " 0.69596996 0.69774793 0.70130388 0.69537736 0.69122873 0.70960096\n",
            " 0.72738049 0.72263926 0.73152903 0.75819833 0.77479258 0.75049385\n",
            " 0.75108653 0.77005135 0.74160408 0.76293956 0.75049385 0.74990125\n",
            " 0.76175427 0.7664955  0.78901617 0.79494268 0.84828128 0.84354014\n",
            " 0.84354014 0.88561832 0.87080204 0.886211   0.83820623 0.83939151\n",
            " 0.83405769 0.81390759 0.84531802 0.86487553 0.85835642 0.83168712\n",
            " 0.79672065 0.81035164 0.80916636 0.79612805 0.81687084 0.85005925\n",
            " 0.86309756 0.81035164 0.83761363 0.85242991 0.84887397 0.83405769\n",
            " 0.84591071 0.9134729  0.92295536 0.91702884 0.90095419 0.87954879\n",
            " 0.86311901 0.8475042  0.8334046  0.82008058 0.80786031 0.79704458\n",
            " 0.78785646 0.78030688 0.77424794 0.76942986 0.76555878 0.76233256\n",
            " 0.7594682  0.75671721 0.7538774  0.75079906 0.74738675 0.74359614\n",
            " 0.739429   0.73492342 0.73014504 0.72517604 0.72010547 0.71502125\n",
            " 0.71000284 0.70511788 0.70041782 0.69593793]\n",
            "0 day output [[0.6916976]]\n",
            "1 day input [0.71434218 0.69715525 0.7131569  0.70367444 0.70130388 0.70367444\n",
            " 0.71493478 0.70130388 0.70367444 0.71493478 0.73389969 0.72975106\n",
            " 0.72975106 0.73745554 0.73804823 0.74219677 0.72382455 0.69596996\n",
            " 0.69774793 0.70130388 0.69537736 0.69122873 0.70960096 0.72738049\n",
            " 0.72263926 0.73152903 0.75819833 0.77479258 0.75049385 0.75108653\n",
            " 0.77005135 0.74160408 0.76293956 0.75049385 0.74990125 0.76175427\n",
            " 0.7664955  0.78901617 0.79494268 0.84828128 0.84354014 0.84354014\n",
            " 0.88561832 0.87080204 0.886211   0.83820623 0.83939151 0.83405769\n",
            " 0.81390759 0.84531802 0.86487553 0.85835642 0.83168712 0.79672065\n",
            " 0.81035164 0.80916636 0.79612805 0.81687084 0.85005925 0.86309756\n",
            " 0.81035164 0.83761363 0.85242991 0.84887397 0.83405769 0.84591071\n",
            " 0.9134729  0.92295536 0.91702884 0.90095419 0.87954879 0.86311901\n",
            " 0.8475042  0.8334046  0.82008058 0.80786031 0.79704458 0.78785646\n",
            " 0.78030688 0.77424794 0.76942986 0.76555878 0.76233256 0.7594682\n",
            " 0.75671721 0.7538774  0.75079906 0.74738675 0.74359614 0.739429\n",
            " 0.73492342 0.73014504 0.72517604 0.72010547 0.71502125 0.71000284\n",
            " 0.70511788 0.70041782 0.69593793 0.6916976 ]\n",
            "1 day output [[0.6877013]]\n",
            "2 day input [0.69715525 0.7131569  0.70367444 0.70130388 0.70367444 0.71493478\n",
            " 0.70130388 0.70367444 0.71493478 0.73389969 0.72975106 0.72975106\n",
            " 0.73745554 0.73804823 0.74219677 0.72382455 0.69596996 0.69774793\n",
            " 0.70130388 0.69537736 0.69122873 0.70960096 0.72738049 0.72263926\n",
            " 0.73152903 0.75819833 0.77479258 0.75049385 0.75108653 0.77005135\n",
            " 0.74160408 0.76293956 0.75049385 0.74990125 0.76175427 0.7664955\n",
            " 0.78901617 0.79494268 0.84828128 0.84354014 0.84354014 0.88561832\n",
            " 0.87080204 0.886211   0.83820623 0.83939151 0.83405769 0.81390759\n",
            " 0.84531802 0.86487553 0.85835642 0.83168712 0.79672065 0.81035164\n",
            " 0.80916636 0.79612805 0.81687084 0.85005925 0.86309756 0.81035164\n",
            " 0.83761363 0.85242991 0.84887397 0.83405769 0.84591071 0.9134729\n",
            " 0.92295536 0.91702884 0.90095419 0.87954879 0.86311901 0.8475042\n",
            " 0.8334046  0.82008058 0.80786031 0.79704458 0.78785646 0.78030688\n",
            " 0.77424794 0.76942986 0.76555878 0.76233256 0.7594682  0.75671721\n",
            " 0.7538774  0.75079906 0.74738675 0.74359614 0.739429   0.73492342\n",
            " 0.73014504 0.72517604 0.72010547 0.71502125 0.71000284 0.70511788\n",
            " 0.70041782 0.69593793 0.6916976  0.68770128]\n",
            "2 day output [[0.68394154]]\n",
            "3 day input [0.7131569  0.70367444 0.70130388 0.70367444 0.71493478 0.70130388\n",
            " 0.70367444 0.71493478 0.73389969 0.72975106 0.72975106 0.73745554\n",
            " 0.73804823 0.74219677 0.72382455 0.69596996 0.69774793 0.70130388\n",
            " 0.69537736 0.69122873 0.70960096 0.72738049 0.72263926 0.73152903\n",
            " 0.75819833 0.77479258 0.75049385 0.75108653 0.77005135 0.74160408\n",
            " 0.76293956 0.75049385 0.74990125 0.76175427 0.7664955  0.78901617\n",
            " 0.79494268 0.84828128 0.84354014 0.84354014 0.88561832 0.87080204\n",
            " 0.886211   0.83820623 0.83939151 0.83405769 0.81390759 0.84531802\n",
            " 0.86487553 0.85835642 0.83168712 0.79672065 0.81035164 0.80916636\n",
            " 0.79612805 0.81687084 0.85005925 0.86309756 0.81035164 0.83761363\n",
            " 0.85242991 0.84887397 0.83405769 0.84591071 0.9134729  0.92295536\n",
            " 0.91702884 0.90095419 0.87954879 0.86311901 0.8475042  0.8334046\n",
            " 0.82008058 0.80786031 0.79704458 0.78785646 0.78030688 0.77424794\n",
            " 0.76942986 0.76555878 0.76233256 0.7594682  0.75671721 0.7538774\n",
            " 0.75079906 0.74738675 0.74359614 0.739429   0.73492342 0.73014504\n",
            " 0.72517604 0.72010547 0.71502125 0.71000284 0.70511788 0.70041782\n",
            " 0.69593793 0.6916976  0.68770128 0.68394154]\n",
            "3 day output [[0.68040085]]\n",
            "4 day input [0.70367444 0.70130388 0.70367444 0.71493478 0.70130388 0.70367444\n",
            " 0.71493478 0.73389969 0.72975106 0.72975106 0.73745554 0.73804823\n",
            " 0.74219677 0.72382455 0.69596996 0.69774793 0.70130388 0.69537736\n",
            " 0.69122873 0.70960096 0.72738049 0.72263926 0.73152903 0.75819833\n",
            " 0.77479258 0.75049385 0.75108653 0.77005135 0.74160408 0.76293956\n",
            " 0.75049385 0.74990125 0.76175427 0.7664955  0.78901617 0.79494268\n",
            " 0.84828128 0.84354014 0.84354014 0.88561832 0.87080204 0.886211\n",
            " 0.83820623 0.83939151 0.83405769 0.81390759 0.84531802 0.86487553\n",
            " 0.85835642 0.83168712 0.79672065 0.81035164 0.80916636 0.79612805\n",
            " 0.81687084 0.85005925 0.86309756 0.81035164 0.83761363 0.85242991\n",
            " 0.84887397 0.83405769 0.84591071 0.9134729  0.92295536 0.91702884\n",
            " 0.90095419 0.87954879 0.86311901 0.8475042  0.8334046  0.82008058\n",
            " 0.80786031 0.79704458 0.78785646 0.78030688 0.77424794 0.76942986\n",
            " 0.76555878 0.76233256 0.7594682  0.75671721 0.7538774  0.75079906\n",
            " 0.74738675 0.74359614 0.739429   0.73492342 0.73014504 0.72517604\n",
            " 0.72010547 0.71502125 0.71000284 0.70511788 0.70041782 0.69593793\n",
            " 0.6916976  0.68770128 0.68394154 0.68040085]\n",
            "4 day output [[0.67705536]]\n",
            "5 day input [0.70130388 0.70367444 0.71493478 0.70130388 0.70367444 0.71493478\n",
            " 0.73389969 0.72975106 0.72975106 0.73745554 0.73804823 0.74219677\n",
            " 0.72382455 0.69596996 0.69774793 0.70130388 0.69537736 0.69122873\n",
            " 0.70960096 0.72738049 0.72263926 0.73152903 0.75819833 0.77479258\n",
            " 0.75049385 0.75108653 0.77005135 0.74160408 0.76293956 0.75049385\n",
            " 0.74990125 0.76175427 0.7664955  0.78901617 0.79494268 0.84828128\n",
            " 0.84354014 0.84354014 0.88561832 0.87080204 0.886211   0.83820623\n",
            " 0.83939151 0.83405769 0.81390759 0.84531802 0.86487553 0.85835642\n",
            " 0.83168712 0.79672065 0.81035164 0.80916636 0.79612805 0.81687084\n",
            " 0.85005925 0.86309756 0.81035164 0.83761363 0.85242991 0.84887397\n",
            " 0.83405769 0.84591071 0.9134729  0.92295536 0.91702884 0.90095419\n",
            " 0.87954879 0.86311901 0.8475042  0.8334046  0.82008058 0.80786031\n",
            " 0.79704458 0.78785646 0.78030688 0.77424794 0.76942986 0.76555878\n",
            " 0.76233256 0.7594682  0.75671721 0.7538774  0.75079906 0.74738675\n",
            " 0.74359614 0.739429   0.73492342 0.73014504 0.72517604 0.72010547\n",
            " 0.71502125 0.71000284 0.70511788 0.70041782 0.69593793 0.6916976\n",
            " 0.68770128 0.68394154 0.68040085 0.67705536]\n",
            "5 day output [[0.6738768]]\n",
            "6 day input [0.70367444 0.71493478 0.70130388 0.70367444 0.71493478 0.73389969\n",
            " 0.72975106 0.72975106 0.73745554 0.73804823 0.74219677 0.72382455\n",
            " 0.69596996 0.69774793 0.70130388 0.69537736 0.69122873 0.70960096\n",
            " 0.72738049 0.72263926 0.73152903 0.75819833 0.77479258 0.75049385\n",
            " 0.75108653 0.77005135 0.74160408 0.76293956 0.75049385 0.74990125\n",
            " 0.76175427 0.7664955  0.78901617 0.79494268 0.84828128 0.84354014\n",
            " 0.84354014 0.88561832 0.87080204 0.886211   0.83820623 0.83939151\n",
            " 0.83405769 0.81390759 0.84531802 0.86487553 0.85835642 0.83168712\n",
            " 0.79672065 0.81035164 0.80916636 0.79612805 0.81687084 0.85005925\n",
            " 0.86309756 0.81035164 0.83761363 0.85242991 0.84887397 0.83405769\n",
            " 0.84591071 0.9134729  0.92295536 0.91702884 0.90095419 0.87954879\n",
            " 0.86311901 0.8475042  0.8334046  0.82008058 0.80786031 0.79704458\n",
            " 0.78785646 0.78030688 0.77424794 0.76942986 0.76555878 0.76233256\n",
            " 0.7594682  0.75671721 0.7538774  0.75079906 0.74738675 0.74359614\n",
            " 0.739429   0.73492342 0.73014504 0.72517604 0.72010547 0.71502125\n",
            " 0.71000284 0.70511788 0.70041782 0.69593793 0.6916976  0.68770128\n",
            " 0.68394154 0.68040085 0.67705536 0.67387682]\n",
            "6 day output [[0.67083645]]\n",
            "7 day input [0.71493478 0.70130388 0.70367444 0.71493478 0.73389969 0.72975106\n",
            " 0.72975106 0.73745554 0.73804823 0.74219677 0.72382455 0.69596996\n",
            " 0.69774793 0.70130388 0.69537736 0.69122873 0.70960096 0.72738049\n",
            " 0.72263926 0.73152903 0.75819833 0.77479258 0.75049385 0.75108653\n",
            " 0.77005135 0.74160408 0.76293956 0.75049385 0.74990125 0.76175427\n",
            " 0.7664955  0.78901617 0.79494268 0.84828128 0.84354014 0.84354014\n",
            " 0.88561832 0.87080204 0.886211   0.83820623 0.83939151 0.83405769\n",
            " 0.81390759 0.84531802 0.86487553 0.85835642 0.83168712 0.79672065\n",
            " 0.81035164 0.80916636 0.79612805 0.81687084 0.85005925 0.86309756\n",
            " 0.81035164 0.83761363 0.85242991 0.84887397 0.83405769 0.84591071\n",
            " 0.9134729  0.92295536 0.91702884 0.90095419 0.87954879 0.86311901\n",
            " 0.8475042  0.8334046  0.82008058 0.80786031 0.79704458 0.78785646\n",
            " 0.78030688 0.77424794 0.76942986 0.76555878 0.76233256 0.7594682\n",
            " 0.75671721 0.7538774  0.75079906 0.74738675 0.74359614 0.739429\n",
            " 0.73492342 0.73014504 0.72517604 0.72010547 0.71502125 0.71000284\n",
            " 0.70511788 0.70041782 0.69593793 0.6916976  0.68770128 0.68394154\n",
            " 0.68040085 0.67705536 0.67387682 0.67083645]\n",
            "7 day output [[0.6679061]]\n",
            "8 day input [0.70130388 0.70367444 0.71493478 0.73389969 0.72975106 0.72975106\n",
            " 0.73745554 0.73804823 0.74219677 0.72382455 0.69596996 0.69774793\n",
            " 0.70130388 0.69537736 0.69122873 0.70960096 0.72738049 0.72263926\n",
            " 0.73152903 0.75819833 0.77479258 0.75049385 0.75108653 0.77005135\n",
            " 0.74160408 0.76293956 0.75049385 0.74990125 0.76175427 0.7664955\n",
            " 0.78901617 0.79494268 0.84828128 0.84354014 0.84354014 0.88561832\n",
            " 0.87080204 0.886211   0.83820623 0.83939151 0.83405769 0.81390759\n",
            " 0.84531802 0.86487553 0.85835642 0.83168712 0.79672065 0.81035164\n",
            " 0.80916636 0.79612805 0.81687084 0.85005925 0.86309756 0.81035164\n",
            " 0.83761363 0.85242991 0.84887397 0.83405769 0.84591071 0.9134729\n",
            " 0.92295536 0.91702884 0.90095419 0.87954879 0.86311901 0.8475042\n",
            " 0.8334046  0.82008058 0.80786031 0.79704458 0.78785646 0.78030688\n",
            " 0.77424794 0.76942986 0.76555878 0.76233256 0.7594682  0.75671721\n",
            " 0.7538774  0.75079906 0.74738675 0.74359614 0.739429   0.73492342\n",
            " 0.73014504 0.72517604 0.72010547 0.71502125 0.71000284 0.70511788\n",
            " 0.70041782 0.69593793 0.6916976  0.68770128 0.68394154 0.68040085\n",
            " 0.67705536 0.67387682 0.67083645 0.66790611]\n",
            "8 day output [[0.6650594]]\n",
            "9 day input [0.70367444 0.71493478 0.73389969 0.72975106 0.72975106 0.73745554\n",
            " 0.73804823 0.74219677 0.72382455 0.69596996 0.69774793 0.70130388\n",
            " 0.69537736 0.69122873 0.70960096 0.72738049 0.72263926 0.73152903\n",
            " 0.75819833 0.77479258 0.75049385 0.75108653 0.77005135 0.74160408\n",
            " 0.76293956 0.75049385 0.74990125 0.76175427 0.7664955  0.78901617\n",
            " 0.79494268 0.84828128 0.84354014 0.84354014 0.88561832 0.87080204\n",
            " 0.886211   0.83820623 0.83939151 0.83405769 0.81390759 0.84531802\n",
            " 0.86487553 0.85835642 0.83168712 0.79672065 0.81035164 0.80916636\n",
            " 0.79612805 0.81687084 0.85005925 0.86309756 0.81035164 0.83761363\n",
            " 0.85242991 0.84887397 0.83405769 0.84591071 0.9134729  0.92295536\n",
            " 0.91702884 0.90095419 0.87954879 0.86311901 0.8475042  0.8334046\n",
            " 0.82008058 0.80786031 0.79704458 0.78785646 0.78030688 0.77424794\n",
            " 0.76942986 0.76555878 0.76233256 0.7594682  0.75671721 0.7538774\n",
            " 0.75079906 0.74738675 0.74359614 0.739429   0.73492342 0.73014504\n",
            " 0.72517604 0.72010547 0.71502125 0.71000284 0.70511788 0.70041782\n",
            " 0.69593793 0.6916976  0.68770128 0.68394154 0.68040085 0.67705536\n",
            " 0.67387682 0.67083645 0.66790611 0.66505939]\n",
            "9 day output [[0.66227466]]\n",
            "10 day input [0.71493478 0.73389969 0.72975106 0.72975106 0.73745554 0.73804823\n",
            " 0.74219677 0.72382455 0.69596996 0.69774793 0.70130388 0.69537736\n",
            " 0.69122873 0.70960096 0.72738049 0.72263926 0.73152903 0.75819833\n",
            " 0.77479258 0.75049385 0.75108653 0.77005135 0.74160408 0.76293956\n",
            " 0.75049385 0.74990125 0.76175427 0.7664955  0.78901617 0.79494268\n",
            " 0.84828128 0.84354014 0.84354014 0.88561832 0.87080204 0.886211\n",
            " 0.83820623 0.83939151 0.83405769 0.81390759 0.84531802 0.86487553\n",
            " 0.85835642 0.83168712 0.79672065 0.81035164 0.80916636 0.79612805\n",
            " 0.81687084 0.85005925 0.86309756 0.81035164 0.83761363 0.85242991\n",
            " 0.84887397 0.83405769 0.84591071 0.9134729  0.92295536 0.91702884\n",
            " 0.90095419 0.87954879 0.86311901 0.8475042  0.8334046  0.82008058\n",
            " 0.80786031 0.79704458 0.78785646 0.78030688 0.77424794 0.76942986\n",
            " 0.76555878 0.76233256 0.7594682  0.75671721 0.7538774  0.75079906\n",
            " 0.74738675 0.74359614 0.739429   0.73492342 0.73014504 0.72517604\n",
            " 0.72010547 0.71502125 0.71000284 0.70511788 0.70041782 0.69593793\n",
            " 0.6916976  0.68770128 0.68394154 0.68040085 0.67705536 0.67387682\n",
            " 0.67083645 0.66790611 0.66505939 0.66227466]\n",
            "10 day output [[0.6595338]]\n",
            "11 day input [0.73389969 0.72975106 0.72975106 0.73745554 0.73804823 0.74219677\n",
            " 0.72382455 0.69596996 0.69774793 0.70130388 0.69537736 0.69122873\n",
            " 0.70960096 0.72738049 0.72263926 0.73152903 0.75819833 0.77479258\n",
            " 0.75049385 0.75108653 0.77005135 0.74160408 0.76293956 0.75049385\n",
            " 0.74990125 0.76175427 0.7664955  0.78901617 0.79494268 0.84828128\n",
            " 0.84354014 0.84354014 0.88561832 0.87080204 0.886211   0.83820623\n",
            " 0.83939151 0.83405769 0.81390759 0.84531802 0.86487553 0.85835642\n",
            " 0.83168712 0.79672065 0.81035164 0.80916636 0.79612805 0.81687084\n",
            " 0.85005925 0.86309756 0.81035164 0.83761363 0.85242991 0.84887397\n",
            " 0.83405769 0.84591071 0.9134729  0.92295536 0.91702884 0.90095419\n",
            " 0.87954879 0.86311901 0.8475042  0.8334046  0.82008058 0.80786031\n",
            " 0.79704458 0.78785646 0.78030688 0.77424794 0.76942986 0.76555878\n",
            " 0.76233256 0.7594682  0.75671721 0.7538774  0.75079906 0.74738675\n",
            " 0.74359614 0.739429   0.73492342 0.73014504 0.72517604 0.72010547\n",
            " 0.71502125 0.71000284 0.70511788 0.70041782 0.69593793 0.6916976\n",
            " 0.68770128 0.68394154 0.68040085 0.67705536 0.67387682 0.67083645\n",
            " 0.66790611 0.66505939 0.66227466 0.6595338 ]\n",
            "11 day output [[0.6568237]]\n",
            "12 day input [0.72975106 0.72975106 0.73745554 0.73804823 0.74219677 0.72382455\n",
            " 0.69596996 0.69774793 0.70130388 0.69537736 0.69122873 0.70960096\n",
            " 0.72738049 0.72263926 0.73152903 0.75819833 0.77479258 0.75049385\n",
            " 0.75108653 0.77005135 0.74160408 0.76293956 0.75049385 0.74990125\n",
            " 0.76175427 0.7664955  0.78901617 0.79494268 0.84828128 0.84354014\n",
            " 0.84354014 0.88561832 0.87080204 0.886211   0.83820623 0.83939151\n",
            " 0.83405769 0.81390759 0.84531802 0.86487553 0.85835642 0.83168712\n",
            " 0.79672065 0.81035164 0.80916636 0.79612805 0.81687084 0.85005925\n",
            " 0.86309756 0.81035164 0.83761363 0.85242991 0.84887397 0.83405769\n",
            " 0.84591071 0.9134729  0.92295536 0.91702884 0.90095419 0.87954879\n",
            " 0.86311901 0.8475042  0.8334046  0.82008058 0.80786031 0.79704458\n",
            " 0.78785646 0.78030688 0.77424794 0.76942986 0.76555878 0.76233256\n",
            " 0.7594682  0.75671721 0.7538774  0.75079906 0.74738675 0.74359614\n",
            " 0.739429   0.73492342 0.73014504 0.72517604 0.72010547 0.71502125\n",
            " 0.71000284 0.70511788 0.70041782 0.69593793 0.6916976  0.68770128\n",
            " 0.68394154 0.68040085 0.67705536 0.67387682 0.67083645 0.66790611\n",
            " 0.66505939 0.66227466 0.6595338  0.65682369]\n",
            "12 day output [[0.65413606]]\n",
            "13 day input [0.72975106 0.73745554 0.73804823 0.74219677 0.72382455 0.69596996\n",
            " 0.69774793 0.70130388 0.69537736 0.69122873 0.70960096 0.72738049\n",
            " 0.72263926 0.73152903 0.75819833 0.77479258 0.75049385 0.75108653\n",
            " 0.77005135 0.74160408 0.76293956 0.75049385 0.74990125 0.76175427\n",
            " 0.7664955  0.78901617 0.79494268 0.84828128 0.84354014 0.84354014\n",
            " 0.88561832 0.87080204 0.886211   0.83820623 0.83939151 0.83405769\n",
            " 0.81390759 0.84531802 0.86487553 0.85835642 0.83168712 0.79672065\n",
            " 0.81035164 0.80916636 0.79612805 0.81687084 0.85005925 0.86309756\n",
            " 0.81035164 0.83761363 0.85242991 0.84887397 0.83405769 0.84591071\n",
            " 0.9134729  0.92295536 0.91702884 0.90095419 0.87954879 0.86311901\n",
            " 0.8475042  0.8334046  0.82008058 0.80786031 0.79704458 0.78785646\n",
            " 0.78030688 0.77424794 0.76942986 0.76555878 0.76233256 0.7594682\n",
            " 0.75671721 0.7538774  0.75079906 0.74738675 0.74359614 0.739429\n",
            " 0.73492342 0.73014504 0.72517604 0.72010547 0.71502125 0.71000284\n",
            " 0.70511788 0.70041782 0.69593793 0.6916976  0.68770128 0.68394154\n",
            " 0.68040085 0.67705536 0.67387682 0.67083645 0.66790611 0.66505939\n",
            " 0.66227466 0.6595338  0.65682369 0.65413606]\n",
            "13 day output [[0.6514664]]\n",
            "14 day input [0.73745554 0.73804823 0.74219677 0.72382455 0.69596996 0.69774793\n",
            " 0.70130388 0.69537736 0.69122873 0.70960096 0.72738049 0.72263926\n",
            " 0.73152903 0.75819833 0.77479258 0.75049385 0.75108653 0.77005135\n",
            " 0.74160408 0.76293956 0.75049385 0.74990125 0.76175427 0.7664955\n",
            " 0.78901617 0.79494268 0.84828128 0.84354014 0.84354014 0.88561832\n",
            " 0.87080204 0.886211   0.83820623 0.83939151 0.83405769 0.81390759\n",
            " 0.84531802 0.86487553 0.85835642 0.83168712 0.79672065 0.81035164\n",
            " 0.80916636 0.79612805 0.81687084 0.85005925 0.86309756 0.81035164\n",
            " 0.83761363 0.85242991 0.84887397 0.83405769 0.84591071 0.9134729\n",
            " 0.92295536 0.91702884 0.90095419 0.87954879 0.86311901 0.8475042\n",
            " 0.8334046  0.82008058 0.80786031 0.79704458 0.78785646 0.78030688\n",
            " 0.77424794 0.76942986 0.76555878 0.76233256 0.7594682  0.75671721\n",
            " 0.7538774  0.75079906 0.74738675 0.74359614 0.739429   0.73492342\n",
            " 0.73014504 0.72517604 0.72010547 0.71502125 0.71000284 0.70511788\n",
            " 0.70041782 0.69593793 0.6916976  0.68770128 0.68394154 0.68040085\n",
            " 0.67705536 0.67387682 0.67083645 0.66790611 0.66505939 0.66227466\n",
            " 0.6595338  0.65682369 0.65413606 0.65146643]\n",
            "14 day output [[0.648814]]\n",
            "15 day input [0.73804823 0.74219677 0.72382455 0.69596996 0.69774793 0.70130388\n",
            " 0.69537736 0.69122873 0.70960096 0.72738049 0.72263926 0.73152903\n",
            " 0.75819833 0.77479258 0.75049385 0.75108653 0.77005135 0.74160408\n",
            " 0.76293956 0.75049385 0.74990125 0.76175427 0.7664955  0.78901617\n",
            " 0.79494268 0.84828128 0.84354014 0.84354014 0.88561832 0.87080204\n",
            " 0.886211   0.83820623 0.83939151 0.83405769 0.81390759 0.84531802\n",
            " 0.86487553 0.85835642 0.83168712 0.79672065 0.81035164 0.80916636\n",
            " 0.79612805 0.81687084 0.85005925 0.86309756 0.81035164 0.83761363\n",
            " 0.85242991 0.84887397 0.83405769 0.84591071 0.9134729  0.92295536\n",
            " 0.91702884 0.90095419 0.87954879 0.86311901 0.8475042  0.8334046\n",
            " 0.82008058 0.80786031 0.79704458 0.78785646 0.78030688 0.77424794\n",
            " 0.76942986 0.76555878 0.76233256 0.7594682  0.75671721 0.7538774\n",
            " 0.75079906 0.74738675 0.74359614 0.739429   0.73492342 0.73014504\n",
            " 0.72517604 0.72010547 0.71502125 0.71000284 0.70511788 0.70041782\n",
            " 0.69593793 0.6916976  0.68770128 0.68394154 0.68040085 0.67705536\n",
            " 0.67387682 0.67083645 0.66790611 0.66505939 0.66227466 0.6595338\n",
            " 0.65682369 0.65413606 0.65146643 0.64881402]\n",
            "15 day output [[0.6461809]]\n",
            "16 day input [0.74219677 0.72382455 0.69596996 0.69774793 0.70130388 0.69537736\n",
            " 0.69122873 0.70960096 0.72738049 0.72263926 0.73152903 0.75819833\n",
            " 0.77479258 0.75049385 0.75108653 0.77005135 0.74160408 0.76293956\n",
            " 0.75049385 0.74990125 0.76175427 0.7664955  0.78901617 0.79494268\n",
            " 0.84828128 0.84354014 0.84354014 0.88561832 0.87080204 0.886211\n",
            " 0.83820623 0.83939151 0.83405769 0.81390759 0.84531802 0.86487553\n",
            " 0.85835642 0.83168712 0.79672065 0.81035164 0.80916636 0.79612805\n",
            " 0.81687084 0.85005925 0.86309756 0.81035164 0.83761363 0.85242991\n",
            " 0.84887397 0.83405769 0.84591071 0.9134729  0.92295536 0.91702884\n",
            " 0.90095419 0.87954879 0.86311901 0.8475042  0.8334046  0.82008058\n",
            " 0.80786031 0.79704458 0.78785646 0.78030688 0.77424794 0.76942986\n",
            " 0.76555878 0.76233256 0.7594682  0.75671721 0.7538774  0.75079906\n",
            " 0.74738675 0.74359614 0.739429   0.73492342 0.73014504 0.72517604\n",
            " 0.72010547 0.71502125 0.71000284 0.70511788 0.70041782 0.69593793\n",
            " 0.6916976  0.68770128 0.68394154 0.68040085 0.67705536 0.67387682\n",
            " 0.67083645 0.66790611 0.66505939 0.66227466 0.6595338  0.65682369\n",
            " 0.65413606 0.65146643 0.64881402 0.64618093]\n",
            "16 day output [[0.643571]]\n",
            "17 day input [0.72382455 0.69596996 0.69774793 0.70130388 0.69537736 0.69122873\n",
            " 0.70960096 0.72738049 0.72263926 0.73152903 0.75819833 0.77479258\n",
            " 0.75049385 0.75108653 0.77005135 0.74160408 0.76293956 0.75049385\n",
            " 0.74990125 0.76175427 0.7664955  0.78901617 0.79494268 0.84828128\n",
            " 0.84354014 0.84354014 0.88561832 0.87080204 0.886211   0.83820623\n",
            " 0.83939151 0.83405769 0.81390759 0.84531802 0.86487553 0.85835642\n",
            " 0.83168712 0.79672065 0.81035164 0.80916636 0.79612805 0.81687084\n",
            " 0.85005925 0.86309756 0.81035164 0.83761363 0.85242991 0.84887397\n",
            " 0.83405769 0.84591071 0.9134729  0.92295536 0.91702884 0.90095419\n",
            " 0.87954879 0.86311901 0.8475042  0.8334046  0.82008058 0.80786031\n",
            " 0.79704458 0.78785646 0.78030688 0.77424794 0.76942986 0.76555878\n",
            " 0.76233256 0.7594682  0.75671721 0.7538774  0.75079906 0.74738675\n",
            " 0.74359614 0.739429   0.73492342 0.73014504 0.72517604 0.72010547\n",
            " 0.71502125 0.71000284 0.70511788 0.70041782 0.69593793 0.6916976\n",
            " 0.68770128 0.68394154 0.68040085 0.67705536 0.67387682 0.67083645\n",
            " 0.66790611 0.66505939 0.66227466 0.6595338  0.65682369 0.65413606\n",
            " 0.65146643 0.64881402 0.64618093 0.64357102]\n",
            "17 day output [[0.6409895]]\n",
            "18 day input [0.69596996 0.69774793 0.70130388 0.69537736 0.69122873 0.70960096\n",
            " 0.72738049 0.72263926 0.73152903 0.75819833 0.77479258 0.75049385\n",
            " 0.75108653 0.77005135 0.74160408 0.76293956 0.75049385 0.74990125\n",
            " 0.76175427 0.7664955  0.78901617 0.79494268 0.84828128 0.84354014\n",
            " 0.84354014 0.88561832 0.87080204 0.886211   0.83820623 0.83939151\n",
            " 0.83405769 0.81390759 0.84531802 0.86487553 0.85835642 0.83168712\n",
            " 0.79672065 0.81035164 0.80916636 0.79612805 0.81687084 0.85005925\n",
            " 0.86309756 0.81035164 0.83761363 0.85242991 0.84887397 0.83405769\n",
            " 0.84591071 0.9134729  0.92295536 0.91702884 0.90095419 0.87954879\n",
            " 0.86311901 0.8475042  0.8334046  0.82008058 0.80786031 0.79704458\n",
            " 0.78785646 0.78030688 0.77424794 0.76942986 0.76555878 0.76233256\n",
            " 0.7594682  0.75671721 0.7538774  0.75079906 0.74738675 0.74359614\n",
            " 0.739429   0.73492342 0.73014504 0.72517604 0.72010547 0.71502125\n",
            " 0.71000284 0.70511788 0.70041782 0.69593793 0.6916976  0.68770128\n",
            " 0.68394154 0.68040085 0.67705536 0.67387682 0.67083645 0.66790611\n",
            " 0.66505939 0.66227466 0.6595338  0.65682369 0.65413606 0.65146643\n",
            " 0.64881402 0.64618093 0.64357102 0.64098948]\n",
            "18 day output [[0.6384416]]\n",
            "19 day input [0.69774793 0.70130388 0.69537736 0.69122873 0.70960096 0.72738049\n",
            " 0.72263926 0.73152903 0.75819833 0.77479258 0.75049385 0.75108653\n",
            " 0.77005135 0.74160408 0.76293956 0.75049385 0.74990125 0.76175427\n",
            " 0.7664955  0.78901617 0.79494268 0.84828128 0.84354014 0.84354014\n",
            " 0.88561832 0.87080204 0.886211   0.83820623 0.83939151 0.83405769\n",
            " 0.81390759 0.84531802 0.86487553 0.85835642 0.83168712 0.79672065\n",
            " 0.81035164 0.80916636 0.79612805 0.81687084 0.85005925 0.86309756\n",
            " 0.81035164 0.83761363 0.85242991 0.84887397 0.83405769 0.84591071\n",
            " 0.9134729  0.92295536 0.91702884 0.90095419 0.87954879 0.86311901\n",
            " 0.8475042  0.8334046  0.82008058 0.80786031 0.79704458 0.78785646\n",
            " 0.78030688 0.77424794 0.76942986 0.76555878 0.76233256 0.7594682\n",
            " 0.75671721 0.7538774  0.75079906 0.74738675 0.74359614 0.739429\n",
            " 0.73492342 0.73014504 0.72517604 0.72010547 0.71502125 0.71000284\n",
            " 0.70511788 0.70041782 0.69593793 0.6916976  0.68770128 0.68394154\n",
            " 0.68040085 0.67705536 0.67387682 0.67083645 0.66790611 0.66505939\n",
            " 0.66227466 0.6595338  0.65682369 0.65413606 0.65146643 0.64881402\n",
            " 0.64618093 0.64357102 0.64098948 0.63844162]\n",
            "19 day output [[0.6359331]]\n",
            "20 day input [0.70130388 0.69537736 0.69122873 0.70960096 0.72738049 0.72263926\n",
            " 0.73152903 0.75819833 0.77479258 0.75049385 0.75108653 0.77005135\n",
            " 0.74160408 0.76293956 0.75049385 0.74990125 0.76175427 0.7664955\n",
            " 0.78901617 0.79494268 0.84828128 0.84354014 0.84354014 0.88561832\n",
            " 0.87080204 0.886211   0.83820623 0.83939151 0.83405769 0.81390759\n",
            " 0.84531802 0.86487553 0.85835642 0.83168712 0.79672065 0.81035164\n",
            " 0.80916636 0.79612805 0.81687084 0.85005925 0.86309756 0.81035164\n",
            " 0.83761363 0.85242991 0.84887397 0.83405769 0.84591071 0.9134729\n",
            " 0.92295536 0.91702884 0.90095419 0.87954879 0.86311901 0.8475042\n",
            " 0.8334046  0.82008058 0.80786031 0.79704458 0.78785646 0.78030688\n",
            " 0.77424794 0.76942986 0.76555878 0.76233256 0.7594682  0.75671721\n",
            " 0.7538774  0.75079906 0.74738675 0.74359614 0.739429   0.73492342\n",
            " 0.73014504 0.72517604 0.72010547 0.71502125 0.71000284 0.70511788\n",
            " 0.70041782 0.69593793 0.6916976  0.68770128 0.68394154 0.68040085\n",
            " 0.67705536 0.67387682 0.67083645 0.66790611 0.66505939 0.66227466\n",
            " 0.6595338  0.65682369 0.65413606 0.65146643 0.64881402 0.64618093\n",
            " 0.64357102 0.64098948 0.63844162 0.6359331 ]\n",
            "20 day output [[0.6334684]]\n",
            "21 day input [0.69537736 0.69122873 0.70960096 0.72738049 0.72263926 0.73152903\n",
            " 0.75819833 0.77479258 0.75049385 0.75108653 0.77005135 0.74160408\n",
            " 0.76293956 0.75049385 0.74990125 0.76175427 0.7664955  0.78901617\n",
            " 0.79494268 0.84828128 0.84354014 0.84354014 0.88561832 0.87080204\n",
            " 0.886211   0.83820623 0.83939151 0.83405769 0.81390759 0.84531802\n",
            " 0.86487553 0.85835642 0.83168712 0.79672065 0.81035164 0.80916636\n",
            " 0.79612805 0.81687084 0.85005925 0.86309756 0.81035164 0.83761363\n",
            " 0.85242991 0.84887397 0.83405769 0.84591071 0.9134729  0.92295536\n",
            " 0.91702884 0.90095419 0.87954879 0.86311901 0.8475042  0.8334046\n",
            " 0.82008058 0.80786031 0.79704458 0.78785646 0.78030688 0.77424794\n",
            " 0.76942986 0.76555878 0.76233256 0.7594682  0.75671721 0.7538774\n",
            " 0.75079906 0.74738675 0.74359614 0.739429   0.73492342 0.73014504\n",
            " 0.72517604 0.72010547 0.71502125 0.71000284 0.70511788 0.70041782\n",
            " 0.69593793 0.6916976  0.68770128 0.68394154 0.68040085 0.67705536\n",
            " 0.67387682 0.67083645 0.66790611 0.66505939 0.66227466 0.6595338\n",
            " 0.65682369 0.65413606 0.65146643 0.64881402 0.64618093 0.64357102\n",
            " 0.64098948 0.63844162 0.6359331  0.63346839]\n",
            "21 day output [[0.6310513]]\n",
            "22 day input [0.69122873 0.70960096 0.72738049 0.72263926 0.73152903 0.75819833\n",
            " 0.77479258 0.75049385 0.75108653 0.77005135 0.74160408 0.76293956\n",
            " 0.75049385 0.74990125 0.76175427 0.7664955  0.78901617 0.79494268\n",
            " 0.84828128 0.84354014 0.84354014 0.88561832 0.87080204 0.886211\n",
            " 0.83820623 0.83939151 0.83405769 0.81390759 0.84531802 0.86487553\n",
            " 0.85835642 0.83168712 0.79672065 0.81035164 0.80916636 0.79612805\n",
            " 0.81687084 0.85005925 0.86309756 0.81035164 0.83761363 0.85242991\n",
            " 0.84887397 0.83405769 0.84591071 0.9134729  0.92295536 0.91702884\n",
            " 0.90095419 0.87954879 0.86311901 0.8475042  0.8334046  0.82008058\n",
            " 0.80786031 0.79704458 0.78785646 0.78030688 0.77424794 0.76942986\n",
            " 0.76555878 0.76233256 0.7594682  0.75671721 0.7538774  0.75079906\n",
            " 0.74738675 0.74359614 0.739429   0.73492342 0.73014504 0.72517604\n",
            " 0.72010547 0.71502125 0.71000284 0.70511788 0.70041782 0.69593793\n",
            " 0.6916976  0.68770128 0.68394154 0.68040085 0.67705536 0.67387682\n",
            " 0.67083645 0.66790611 0.66505939 0.66227466 0.6595338  0.65682369\n",
            " 0.65413606 0.65146643 0.64881402 0.64618093 0.64357102 0.64098948\n",
            " 0.63844162 0.6359331  0.63346839 0.6310513 ]\n",
            "22 day output [[0.6286848]]\n",
            "23 day input [0.70960096 0.72738049 0.72263926 0.73152903 0.75819833 0.77479258\n",
            " 0.75049385 0.75108653 0.77005135 0.74160408 0.76293956 0.75049385\n",
            " 0.74990125 0.76175427 0.7664955  0.78901617 0.79494268 0.84828128\n",
            " 0.84354014 0.84354014 0.88561832 0.87080204 0.886211   0.83820623\n",
            " 0.83939151 0.83405769 0.81390759 0.84531802 0.86487553 0.85835642\n",
            " 0.83168712 0.79672065 0.81035164 0.80916636 0.79612805 0.81687084\n",
            " 0.85005925 0.86309756 0.81035164 0.83761363 0.85242991 0.84887397\n",
            " 0.83405769 0.84591071 0.9134729  0.92295536 0.91702884 0.90095419\n",
            " 0.87954879 0.86311901 0.8475042  0.8334046  0.82008058 0.80786031\n",
            " 0.79704458 0.78785646 0.78030688 0.77424794 0.76942986 0.76555878\n",
            " 0.76233256 0.7594682  0.75671721 0.7538774  0.75079906 0.74738675\n",
            " 0.74359614 0.739429   0.73492342 0.73014504 0.72517604 0.72010547\n",
            " 0.71502125 0.71000284 0.70511788 0.70041782 0.69593793 0.6916976\n",
            " 0.68770128 0.68394154 0.68040085 0.67705536 0.67387682 0.67083645\n",
            " 0.66790611 0.66505939 0.66227466 0.6595338  0.65682369 0.65413606\n",
            " 0.65146643 0.64881402 0.64618093 0.64357102 0.64098948 0.63844162\n",
            " 0.6359331  0.63346839 0.6310513  0.62868482]\n",
            "23 day output [[0.6263697]]\n",
            "24 day input [0.72738049 0.72263926 0.73152903 0.75819833 0.77479258 0.75049385\n",
            " 0.75108653 0.77005135 0.74160408 0.76293956 0.75049385 0.74990125\n",
            " 0.76175427 0.7664955  0.78901617 0.79494268 0.84828128 0.84354014\n",
            " 0.84354014 0.88561832 0.87080204 0.886211   0.83820623 0.83939151\n",
            " 0.83405769 0.81390759 0.84531802 0.86487553 0.85835642 0.83168712\n",
            " 0.79672065 0.81035164 0.80916636 0.79612805 0.81687084 0.85005925\n",
            " 0.86309756 0.81035164 0.83761363 0.85242991 0.84887397 0.83405769\n",
            " 0.84591071 0.9134729  0.92295536 0.91702884 0.90095419 0.87954879\n",
            " 0.86311901 0.8475042  0.8334046  0.82008058 0.80786031 0.79704458\n",
            " 0.78785646 0.78030688 0.77424794 0.76942986 0.76555878 0.76233256\n",
            " 0.7594682  0.75671721 0.7538774  0.75079906 0.74738675 0.74359614\n",
            " 0.739429   0.73492342 0.73014504 0.72517604 0.72010547 0.71502125\n",
            " 0.71000284 0.70511788 0.70041782 0.69593793 0.6916976  0.68770128\n",
            " 0.68394154 0.68040085 0.67705536 0.67387682 0.67083645 0.66790611\n",
            " 0.66505939 0.66227466 0.6595338  0.65682369 0.65413606 0.65146643\n",
            " 0.64881402 0.64618093 0.64357102 0.64098948 0.63844162 0.6359331\n",
            " 0.63346839 0.6310513  0.62868482 0.62636971]\n",
            "24 day output [[0.6241066]]\n",
            "25 day input [0.72263926 0.73152903 0.75819833 0.77479258 0.75049385 0.75108653\n",
            " 0.77005135 0.74160408 0.76293956 0.75049385 0.74990125 0.76175427\n",
            " 0.7664955  0.78901617 0.79494268 0.84828128 0.84354014 0.84354014\n",
            " 0.88561832 0.87080204 0.886211   0.83820623 0.83939151 0.83405769\n",
            " 0.81390759 0.84531802 0.86487553 0.85835642 0.83168712 0.79672065\n",
            " 0.81035164 0.80916636 0.79612805 0.81687084 0.85005925 0.86309756\n",
            " 0.81035164 0.83761363 0.85242991 0.84887397 0.83405769 0.84591071\n",
            " 0.9134729  0.92295536 0.91702884 0.90095419 0.87954879 0.86311901\n",
            " 0.8475042  0.8334046  0.82008058 0.80786031 0.79704458 0.78785646\n",
            " 0.78030688 0.77424794 0.76942986 0.76555878 0.76233256 0.7594682\n",
            " 0.75671721 0.7538774  0.75079906 0.74738675 0.74359614 0.739429\n",
            " 0.73492342 0.73014504 0.72517604 0.72010547 0.71502125 0.71000284\n",
            " 0.70511788 0.70041782 0.69593793 0.6916976  0.68770128 0.68394154\n",
            " 0.68040085 0.67705536 0.67387682 0.67083645 0.66790611 0.66505939\n",
            " 0.66227466 0.6595338  0.65682369 0.65413606 0.65146643 0.64881402\n",
            " 0.64618093 0.64357102 0.64098948 0.63844162 0.6359331  0.63346839\n",
            " 0.6310513  0.62868482 0.62636971 0.62410659]\n",
            "25 day output [[0.6218945]]\n",
            "26 day input [0.73152903 0.75819833 0.77479258 0.75049385 0.75108653 0.77005135\n",
            " 0.74160408 0.76293956 0.75049385 0.74990125 0.76175427 0.7664955\n",
            " 0.78901617 0.79494268 0.84828128 0.84354014 0.84354014 0.88561832\n",
            " 0.87080204 0.886211   0.83820623 0.83939151 0.83405769 0.81390759\n",
            " 0.84531802 0.86487553 0.85835642 0.83168712 0.79672065 0.81035164\n",
            " 0.80916636 0.79612805 0.81687084 0.85005925 0.86309756 0.81035164\n",
            " 0.83761363 0.85242991 0.84887397 0.83405769 0.84591071 0.9134729\n",
            " 0.92295536 0.91702884 0.90095419 0.87954879 0.86311901 0.8475042\n",
            " 0.8334046  0.82008058 0.80786031 0.79704458 0.78785646 0.78030688\n",
            " 0.77424794 0.76942986 0.76555878 0.76233256 0.7594682  0.75671721\n",
            " 0.7538774  0.75079906 0.74738675 0.74359614 0.739429   0.73492342\n",
            " 0.73014504 0.72517604 0.72010547 0.71502125 0.71000284 0.70511788\n",
            " 0.70041782 0.69593793 0.6916976  0.68770128 0.68394154 0.68040085\n",
            " 0.67705536 0.67387682 0.67083645 0.66790611 0.66505939 0.66227466\n",
            " 0.6595338  0.65682369 0.65413606 0.65146643 0.64881402 0.64618093\n",
            " 0.64357102 0.64098948 0.63844162 0.6359331  0.63346839 0.6310513\n",
            " 0.62868482 0.62636971 0.62410659 0.62189448]\n",
            "26 day output [[0.61973155]]\n",
            "27 day input [0.75819833 0.77479258 0.75049385 0.75108653 0.77005135 0.74160408\n",
            " 0.76293956 0.75049385 0.74990125 0.76175427 0.7664955  0.78901617\n",
            " 0.79494268 0.84828128 0.84354014 0.84354014 0.88561832 0.87080204\n",
            " 0.886211   0.83820623 0.83939151 0.83405769 0.81390759 0.84531802\n",
            " 0.86487553 0.85835642 0.83168712 0.79672065 0.81035164 0.80916636\n",
            " 0.79612805 0.81687084 0.85005925 0.86309756 0.81035164 0.83761363\n",
            " 0.85242991 0.84887397 0.83405769 0.84591071 0.9134729  0.92295536\n",
            " 0.91702884 0.90095419 0.87954879 0.86311901 0.8475042  0.8334046\n",
            " 0.82008058 0.80786031 0.79704458 0.78785646 0.78030688 0.77424794\n",
            " 0.76942986 0.76555878 0.76233256 0.7594682  0.75671721 0.7538774\n",
            " 0.75079906 0.74738675 0.74359614 0.739429   0.73492342 0.73014504\n",
            " 0.72517604 0.72010547 0.71502125 0.71000284 0.70511788 0.70041782\n",
            " 0.69593793 0.6916976  0.68770128 0.68394154 0.68040085 0.67705536\n",
            " 0.67387682 0.67083645 0.66790611 0.66505939 0.66227466 0.6595338\n",
            " 0.65682369 0.65413606 0.65146643 0.64881402 0.64618093 0.64357102\n",
            " 0.64098948 0.63844162 0.6359331  0.63346839 0.6310513  0.62868482\n",
            " 0.62636971 0.62410659 0.62189448 0.61973155]\n",
            "27 day output [[0.61761534]]\n",
            "28 day input [0.77479258 0.75049385 0.75108653 0.77005135 0.74160408 0.76293956\n",
            " 0.75049385 0.74990125 0.76175427 0.7664955  0.78901617 0.79494268\n",
            " 0.84828128 0.84354014 0.84354014 0.88561832 0.87080204 0.886211\n",
            " 0.83820623 0.83939151 0.83405769 0.81390759 0.84531802 0.86487553\n",
            " 0.85835642 0.83168712 0.79672065 0.81035164 0.80916636 0.79612805\n",
            " 0.81687084 0.85005925 0.86309756 0.81035164 0.83761363 0.85242991\n",
            " 0.84887397 0.83405769 0.84591071 0.9134729  0.92295536 0.91702884\n",
            " 0.90095419 0.87954879 0.86311901 0.8475042  0.8334046  0.82008058\n",
            " 0.80786031 0.79704458 0.78785646 0.78030688 0.77424794 0.76942986\n",
            " 0.76555878 0.76233256 0.7594682  0.75671721 0.7538774  0.75079906\n",
            " 0.74738675 0.74359614 0.739429   0.73492342 0.73014504 0.72517604\n",
            " 0.72010547 0.71502125 0.71000284 0.70511788 0.70041782 0.69593793\n",
            " 0.6916976  0.68770128 0.68394154 0.68040085 0.67705536 0.67387682\n",
            " 0.67083645 0.66790611 0.66505939 0.66227466 0.6595338  0.65682369\n",
            " 0.65413606 0.65146643 0.64881402 0.64618093 0.64357102 0.64098948\n",
            " 0.63844162 0.6359331  0.63346839 0.6310513  0.62868482 0.62636971\n",
            " 0.62410659 0.62189448 0.61973155 0.61761534]\n",
            "28 day output [[0.6155424]]\n",
            "29 day input [0.75049385 0.75108653 0.77005135 0.74160408 0.76293956 0.75049385\n",
            " 0.74990125 0.76175427 0.7664955  0.78901617 0.79494268 0.84828128\n",
            " 0.84354014 0.84354014 0.88561832 0.87080204 0.886211   0.83820623\n",
            " 0.83939151 0.83405769 0.81390759 0.84531802 0.86487553 0.85835642\n",
            " 0.83168712 0.79672065 0.81035164 0.80916636 0.79612805 0.81687084\n",
            " 0.85005925 0.86309756 0.81035164 0.83761363 0.85242991 0.84887397\n",
            " 0.83405769 0.84591071 0.9134729  0.92295536 0.91702884 0.90095419\n",
            " 0.87954879 0.86311901 0.8475042  0.8334046  0.82008058 0.80786031\n",
            " 0.79704458 0.78785646 0.78030688 0.77424794 0.76942986 0.76555878\n",
            " 0.76233256 0.7594682  0.75671721 0.7538774  0.75079906 0.74738675\n",
            " 0.74359614 0.739429   0.73492342 0.73014504 0.72517604 0.72010547\n",
            " 0.71502125 0.71000284 0.70511788 0.70041782 0.69593793 0.6916976\n",
            " 0.68770128 0.68394154 0.68040085 0.67705536 0.67387682 0.67083645\n",
            " 0.66790611 0.66505939 0.66227466 0.6595338  0.65682369 0.65413606\n",
            " 0.65146643 0.64881402 0.64618093 0.64357102 0.64098948 0.63844162\n",
            " 0.6359331  0.63346839 0.6310513  0.62868482 0.62636971 0.62410659\n",
            " 0.62189448 0.61973155 0.61761534 0.61554241]\n",
            "29 day output [[0.61351]]\n",
            "[[0.6916975975036621], [0.6877012848854065], [0.6839415431022644], [0.6804008483886719], [0.6770553588867188], [0.6738768219947815], [0.6708364486694336], [0.6679061055183411], [0.6650593876838684], [0.6622746586799622], [0.6595337986946106], [0.6568236947059631], [0.654136061668396], [0.651466429233551], [0.6488140225410461], [0.6461809277534485], [0.6435710191726685], [0.6409894824028015], [0.6384416222572327], [0.6359331011772156], [0.6334683895111084], [0.6310513019561768], [0.6286848187446594], [0.6263697147369385], [0.6241065859794617], [0.6218944787979126], [0.6197315454483032], [0.6176153421401978], [0.6155424118041992], [0.613510012626648]]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "len(ds_scaled)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "iYneAjDfiYzk",
        "outputId": "c772d860-507f-4741-8c1a-e807b5fcdbd5"
      },
      "execution_count": 79,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "1235"
            ]
          },
          "metadata": {},
          "execution_count": 79
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Creating a dummy plane to plot graph one after another\n",
        "plot_new=np.arange(1,101)\n",
        "plot_pred=np.arange(101,131)"
      ],
      "metadata": {
        "id": "XyXBAYcKia8i"
      },
      "execution_count": 81,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Plot the actual data for the next 100 days starting from index 1135 and inverse transform it\n",
        "plt.plot(plot_new, normalizer.inverse_transform(ds_scaled[1135:]))\n",
        "# Plot the predicted data for the next 30 days starting from day 101 (plot_pred) and inverse transform it\n",
        "plt.plot(plot_pred, normalizer.inverse_transform(lst_output))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 447
        },
        "id": "E4uP0GOxigMb",
        "outputId": "23cd0561-b51f-4273-b54c-0a42ca0498ca"
      },
      "execution_count": 89,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[<matplotlib.lines.Line2D at 0x79620f6a2a40>]"
            ]
          },
          "metadata": {},
          "execution_count": 89
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "ds_new = ds_scaled.tolist()"
      ],
      "metadata": {
        "id": "IcaO0xZPilF8"
      },
      "execution_count": 83,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Entends helps us to fill the missing value with approx value\n",
        "ds_new.extend(lst_output)\n",
        "plt.plot(ds_new[1200:])"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 447
        },
        "id": "bQk8NxhcinkE",
        "outputId": "172373ac-bbc4-4e56-997a-36ba3eba26b4"
      },
      "execution_count": 84,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[<matplotlib.lines.Line2D at 0x7962116a78b0>]"
            ]
          },
          "metadata": {},
          "execution_count": 84
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Creating final data for plotting\n",
        "final_graph = normalizer.inverse_transform(ds_new).tolist()"
      ],
      "metadata": {
        "id": "a_1vLGjviue5"
      },
      "execution_count": 85,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Plotting final results with predicted value after 30 Days\n",
        "plt.plot(final_graph,)  # Plot the final_graph data\n",
        "plt.ylabel(\"Price\")     # Set the y-axis label to \"Price\"\n",
        "plt.xlabel(\"Time\")      # Set the x-axis label to \"Time\"\n",
        "plt.title(\"{0} prediction of next month open\".format(stock_symbol))    # Set the plot title with the stock symbol\n",
        "# Add a horizontal line at the last value of final_graph and label it\n",
        "plt.axhline(y=final_graph[len(final_graph)-1], color = 'red', linestyle = ':', label = 'NEXT 30D: {0}'.format(round(float(*final_graph[len(final_graph)-1]),2)))\n",
        "plt.legend()  # Show the legend with the label"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 489
        },
        "id": "VZgarscQIqvx",
        "outputId": "699e5b13-74ba-4e67-d00b-12d5386f1466"
      },
      "execution_count": 88,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.legend.Legend at 0x79620f77e920>"
            ]
          },
          "metadata": {},
          "execution_count": 88
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Hence we have successfully predict the stock price for next 30 days!"
      ],
      "metadata": {
        "id": "oUnHlowlItD7"
      },
      "execution_count": 87,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "xEx1W1b8JD6d"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}